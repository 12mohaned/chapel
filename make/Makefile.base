#
# Makefile.base: Defines general Makefile variables.  Set CHAPEL_ROOT
# before using
#

MAKEFLAGS = --no-print-directory

ifndef CHPL_MAKE_HOST_TARGET
CHPL_MAKE_HOST_TARGET = --host
endif

#
# determine what platform we're running on
#
include $(CHAPEL_ROOT)/make/Makefile.platform

ifndef CHPL_MAKE_COMPILER
include $(CHAPEL_ROOT)/make/Makefile.compiler
endif

ifndef CHPL_MAKE_THREADS
include $(CHAPEL_ROOT)/make/Makefile.threads
endif

ifndef CHPL_MAKE_COMM
include $(CHAPEL_ROOT)/make/Makefile.comm
endif

ifndef CHPL_MAKE_LAUNCHER
include $(CHAPEL_ROOT)/make/Makefile.launcher
endif


#
# default CFLAGS, based on other settings
#
ifeq ($(DEBUG), 1)
CFLAGS += $(DEBUG_CFLAGS)
endif

ifeq ($(OPTIMIZE), 1)
CFLAGS += $(OPT_CFLAGS)
endif

ifeq ($(PROFILE), 1)
CFLAGS += $(PROFILE_CFLAGS)
LDFLAGS += $(PROFILE_LFLAGS)
endif


#
# Directories, files, and locations
#
THIRD_PARTY_DIR = $(CHAPEL_ROOT)/third-party

ARMCI_DIR = $(THIRD_PARTY_DIR)/armci
ARMCI_VERSION = GPCsockets
ARMCI_TARGET = $(shell $(ARMCI_DIR)/util/target.pl)
ARMCI_SRC_DIR = $(ARMCI_DIR)/armci-$(ARMCI_VERSION)
ARMCI_INSTALL_DIR = $(ARMCI_DIR)/armci-$(ARMCI_VERSION)/lib/$(ARMCI_TARGET)
ARMCI_LIB_DIR = $(ARMCI_INSTALL_DIR)

GASNET_DIR = $(THIRD_PARTY_DIR)/gasnet
GASNET_INSTALL_DIR = $(GASNET_DIR)/install/$(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_COMPILER)
GASNET_LIB_DIR = $(GASNET_INSTALL_DIR)/lib

MPICH1_DIR = $(THIRD_PARTY_DIR)/mpich1
MPICH1_INSTALL_DIR = $(MPICH1_DIR)/install/$(CHPL_MAKE_TARGET_PLATFORM)
MPICH1_LIB_DIR = $(MPICH1_INSTALL_DIR)/lib


#
# how to make a platform-specific subdirectory
#

default: all

printplatform:
	@echo "for $(CHPL_MAKE_HOST_TARGET)..."
	@echo "CHPL_MAKE_PLATFORM        = $(CHPL_MAKE_PLATFORM)"
	@echo "CHPL_MAKE_HOST_PLATFORM   = $(CHPL_MAKE_HOST_PLATFORM)"
	@echo "CHPL_MAKE_TARGET_PLATFORM = $(CHPL_MAKE_TARGET_PLATFORM)"
	@echo "CHPL_MAKE_COMPILER        = $(CHPL_MAKE_COMPILER)"
	@echo "CHPL_MAKE_THREADS         = $(CHPL_MAKE_THREADS)"
	@echo "CHPL_MAKE_COMM            = $(CHPL_MAKE_COMM)"
	@echo "CHPL_MAKE_LAUNCHER        = $(CHPL_MAKE_LAUNCHER)"

#
# OBJ_SUBDIR_MADE creates either a directory or a symbolic link,
# depending on how CHPLDEVTMP is set -- well, actually it creates a
# timestamp file (OBJ_SUBDIR_TIMESTAMP) so that the varying time
# stamps of directories don't cause things to rebuild indiscriminately.
# OBJ_SUBDIR is the actual directory.  OBJ_SUBDIR_SAFESLASH
# is the directory with slashes escaped appropriately for use in
# Makefile command rules.
#
GEN_SUBDIR = gen
PLAT_COMPILER_SUBDIR = $(CHPL_MAKE_HOST_PLATFORM)/$(CHPL_MAKE_COMPILER)
PLAT_RUNTIME_SUBDIR = $(CHPL_MAKE_TARGET_PLATFORM)/$(CHPL_MAKE_COMPILER)
OBJ_SUBDIR = $(GEN_SUBDIR)/$(PLAT_COMPILER_SUBDIR)
OBJ_SUBDIR_TIMESTAMP = $(OBJ_SUBDIR)/.timestamp
OBJ_SUBDIR_MADE = $(OBJ_SUBDIR_TIMESTAMP)
OBJ_SUBDIR_SAFESLASH = $(subst /,\\/, $(OBJ_SUBDIR))

ifndef CHPLDEVTMP
$(OBJ_SUBDIR_TIMESTAMP):
	@echo making $(OBJ_SUBDIR) subdirectory to store platform-specific files
	@mkdir -p $(OBJ_SUBDIR)
	@-touch $(OBJ_SUBDIR_TIMESTAMP)
else
$(OBJ_SUBDIR_TIMESTAMP):
	@echo linking $(OBJ_SUBDIR) subdirectory to store platform-specific files
	@mkdir -p $(CHPLDEVTMP)/chapel-$(USER)$(CURDIR)/$(OBJ_SUBDIR)
	@rm -f $(OBJ_SUBDIR)
	@ln -s $(CHPLDEVTMP)/chapel-$(USER)$(CURDIR)/$(CHPL_MAKE_PLATFORM) .
	@-touch $(OBJ_SUBDIR_TIMESTAMP)
endif

COMM_THREAD_SUBDIR = comm-$(CHPL_MAKE_COMM)/threads-$(CHPL_MAKE_THREADS)
COMM_LAUNCH_SUBDIR = comm-$(CHPL_MAKE_COMM)/launch-$(CHPL_MAKE_LAUNCHER)
RUNTIME_OBJDIR = $(OBJ_SUBDIR)/$(COMM_THREAD_SUBDIR)
LAUNCHER_OBJDIR = $(OBJ_SUBDIR)/$(COMM_LAUNCH_SUBDIR)
LIB_RT_DIR = lib/$(PLAT_RUNTIME_SUBDIR)/$(COMM_THREAD_SUBDIR)
LIB_LN_DIR = lib/$(PLAT_RUNTIME_SUBDIR)/$(COMM_LAUNCH_SUBDIR)


CHPL_BIN_DIR = $(CHAPEL_ROOT)/bin/$(CHPL_MAKE_HOST_PLATFORM)
CHPL = $(CHPL_BIN_DIR)/chpl$(EXE_SUFFIX)
RUNTIME_CHPL_FLAGS = --runtime --no-checks


#
# default tools
# 
ifndef CHPL_TAGS_UTIL
ifeq ($(CHPL_EDITOR),vim)
CHPL_TAGS_UTIL = ctags
CHPL_TAGS_FLAGS = -w
CHPL_TAGS_FILE = tags
CHPL_TAGS_APPEND_FLAG = -a
else
CHPL_TAGS_UTIL = etags
CHPL_TAGS_FILE = TAGS
CHPL_TAGS_APPEND_FLAG = -a
endif
endif


#
# echo to use with the -n option
#
ECHO = echo


#
# by default, no executable suffix
#
EXE_SUFFIX = 


#
# include compiler- and platform-specific settings
#
-include $(CHAPEL_ROOT)/make/compiler/Makefile.$(CHPL_MAKE_COMPILER)
-include $(CHAPEL_ROOT)/make/platform/Makefile.$(CHPL_MAKE_PLATFORM)
