#
# Makefile.base: Defines general Makefile variables.  Set CHAPEL_ROOT
# before using
#

MAKEFLAGS = --no-print-directory


#
# determine what platform we're running on
#
include $(CHAPEL_ROOT)/make/Makefile.platform


#
# Directories, files, and locations
#


#
# how to make a platform-specific subdirectory
#

default: all


#
# PLATFORM_DIR creates either a directory or a symbolic link,
# depending on how CHPLDEVTMP is set
#
PLATFORM_DIR = ./$(PLATFORM)/.timestamp

ifndef CHPLDEVTMP
$(PLATFORM_DIR):
	@echo making $(PLATFORM) subdirectory to store platform-specific files
	@-mkdir $(PLATFORM) > /dev/null 2>&1
	@-touch $(PLATFORM_DIR)
else
$(PLATFORM_DIR):
	@echo linking $(PLATFORM) subdirectory to store platform-specific files
	mkdir -p $(CHPLDEVTMP)/chapel-$(USER)$(CURDIR)/$(PLATFORM)
	rm -f $(PLATFORM)
	ln -s $(CHPLDEVTMP)/chapel-$(USER)$(CURDIR)/$(PLATFORM) .
	@-touch $(PLATFORM_DIR)
endif


#
# default tools
# 

#
# echo to use with the -n option
#
ECHO = echo


#
# by default, no executable suffix
#
EXE_SUFFIX = 

$(CHAPEL_ROOT)/make/Makefile.%:
	@echo "WARNING: The Chapel group hasn't compiled for platform $(PLATFORM) before."
	@echo -n "Does this platform use the gnu toolsuite? (y/n) "
	@read GNUTOOLS && if [ "$$GNUTOOLS" == "y" ]; then cp $(CHAPEL_ROOT)/make/Makefile.generic.gnu $@; else cp $(CHAPEL_ROOT)/make/Makefile.generic $@; fi;
	@echo "*************************************************************************"
	@echo "Creating $(CHAPEL_ROOT)/make/Makefile.$(PLATFORM)..."
	@echo "-------------------------------------------------------------------------"
	@echo "NOTE: You may need to customize this file in order to build successfully."
	@echo "      Please send any questions and/or edits to chapel_info@cray.com"
	@echo "      so that we can support your platform better in future releases."
	@echo "*************************************************************************"

#
# include platform-specific settings
#
-include $(CHAPEL_ROOT)/make/Makefile.$(PLATFORM)

