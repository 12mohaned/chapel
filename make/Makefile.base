#
# Makefile.base: Defines general Makefile variables.  Set CHAPEL_ROOT
# before using
#

MAKEFLAGS = --no-print-directory


#
# determine what platform we're running on
#
ifndef CHPL_MAKE_PLATFORM
include $(CHAPEL_ROOT)/make/Makefile.platform
endif

#
# use pthreads if CHPL_THREADS is not specified
#
ifndef CHPL_THREADS
CHPL_THREADS = pthreads
endif

#
# use none if CHPL_COMM is not specified
#
ifndef CHPL_COMM
CHPL_COMM = none
endif

#
# default CFLAGS, based on other settings
#
ifeq ($(DEBUG), 1)
CFLAGS += $(DEBUG_CFLAGS)
endif

ifeq ($(OPTIMIZE), 1)
CFLAGS += $(OPT_CFLAGS)
endif

ifeq ($(PROFILE), 1)
CFLAGS += $(PROFILE_CFLAGS)
LDFLAGS += $(PROFILE_LFLAGS)
endif


#
# Directories, files, and locations
#


#
# how to make a platform-specific subdirectory
#

default: all

printplatform:
	@echo "CHPL_MAKE_PLATFORM   = $(CHPL_MAKE_PLATFORM)"

#
# PLATFORM_DIR creates either a directory or a symbolic link,
# depending on how CHPLDEVTMP is set -- well, actually it's
# a timestamp file so that the varying time stamps of directories
# don't cause things to rebuild indiscriminately.  PLATFORM_DIR_DIR
# is actually the directory.  PLATFORM_DIR_SAFESLASH is the directory
# with slashes escaped appropriately for use in Makefile command rules.
#
PLATFORM_DIR = ./$(CHPL_MAKE_PLATFORM)/.timestamp
PLATFORM_DIR_DIR = ./$(CHPL_MAKE_PLATFORM)
PLATFORM_DIR_SAFESLASH = $(subst /,\\/, $(PLATFORM_DIR_DIR))

ifndef CHPLDEVTMP
$(PLATFORM_DIR):
	@echo making $(CHPL_MAKE_PLATFORM) subdirectory to store platform-specific files
	@-mkdir $(CHPL_MAKE_PLATFORM) > /dev/null 2>&1
	@-touch $(PLATFORM_DIR)
else
$(PLATFORM_DIR):
	@echo linking $(CHPL_MAKE_PLATFORM) subdirectory to store platform-specific files
	@mkdir -p $(CHPLDEVTMP)/chapel-$(USER)$(CURDIR)/$(CHPL_MAKE_PLATFORM)
	@rm -f $(CHPL_MAKE_PLATFORM)
	@ln -s $(CHPLDEVTMP)/chapel-$(USER)$(CURDIR)/$(CHPL_MAKE_PLATFORM) .
	@-touch $(PLATFORM_DIR)
endif


#
# default tools
# 

#
# echo to use with the -n option
#
ECHO = echo


#
# by default, no executable suffix
#
EXE_SUFFIX = 

$(CHAPEL_ROOT)/make/Makefile.%:
	@echo "WARNING: The Chapel group hasn't compiled for platform $(CHPL_MAKE_PLATFORM) before."
	@echo -n "Does this platform use the gnu toolsuite? (y/n) "
	@read GNUTOOLS && if [ "$$GNUTOOLS" == "y" ]; then cp $(CHAPEL_ROOT)/make/Makefile.generic.gnu $@; else cp $(CHAPEL_ROOT)/make/Makefile.generic $@; fi;
	@echo "*************************************************************************"
	@echo "Creating $(CHAPEL_ROOT)/make/Makefile.$(CHPL_MAKE_PLATFORM)..."
	@echo "-------------------------------------------------------------------------"
	@echo "NOTE: You may need to customize this file in order to build successfully."
	@echo "      Please send any questions and/or edits to chapel_info@cray.com"
	@echo "      so that we can support your platform better in future releases."
	@echo "*************************************************************************"

#
# include platform-specific settings
#
-include $(CHAPEL_ROOT)/make/Makefile.$(CHPL_MAKE_PLATFORM)

