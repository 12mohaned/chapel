Usage:
    mason new [options] <project name>

Options:
    -h, --help                   Display this message
        --show                   Increase verbosity
        --no-vcs                 Do not initialize a git repository
Modify a Mason package's Mason.toml

Usage:
    mason rm [options] package
    mason add [options] package@version

Options:
    -h, --help                  Display this message
        --external              Add/Remove dependency from external dependencies
        --system                Add/Remove dependency from system dependencies

Not listing an option will add/remove the dependency from the Mason [dependencies] table
Versions are necessary for adding dependencies, but not for removing dependencies
Manually edit the Mason.toml if multiple versions of the same package are listed
Package names and versions are not validated upon adding
Modify a Mason package's Mason.toml

Usage:
    mason rm [options] package
    mason add [options] package@version

Options:
    -h, --help                  Display this message
        --external              Add/Remove dependency from external dependencies
        --system                Add/Remove dependency from system dependencies

Not listing an option will add/remove the dependency from the Mason [dependencies] table
Versions are necessary for adding dependencies, but not for removing dependencies
Manually edit the Mason.toml if multiple versions of the same package are listed
Package names and versions are not validated upon adding
Compile a local package and all of its dependencies

Usage:
    mason build [options]

Options:
    -h, --help                   Display this message
        --show                   Increase verbosity
        --release                Compile to target/release with optimizations (--fast)
        --force                  Force Mason to build the project
        --example <example>      Build an example from the example/ directory
        --no-update              Do not update the mason registry before building

When --example is thrown without an example, all examples will be built
When no options are provided, the following will take place:
   - Build from mason project if Mason.lock present

Compilation flags and arguments can be included after mason arguments.
To ensure compilation flags and mason arguments to not conflict, separate them with a
single dash(`-`). For example
   e.g. mason build --force - --savec tmpdir
Run the compiled project and output to standard output

Usage:
   mason run [options]

Options:
    -h, --help                   Display this message
        --build                  Compile before running binary
        --show                   Increase verbosity
        --example <example>      Run an example

When --example is thrown without an example, all available examples will be listed

When no options are provided, the following will take place:
   - Execute binary from mason project if target/ is present
   - If no target directory, build and run is Mason.toml is present

Runtime arguments can be included after mason arguments.
To ensure that runtime arguments and mason arguments to not conflict, separate them
with a single dash(`-`). For example
   e.g. mason run --build - --runtimeArg=true
Search the registry for a package

Usage:
    mason search [options] <query>

Options:
    -h, --help                  Display this message

When no query is provided, all packages in the registry will be listed. The
query will be used in a case-insensitive search of all packages in the
registry.

Packages will be listed regardless of their chplVersion compatibility.
Print environment variables recognized by mason

Usage:
    mason env [options]

Options:
    -h, --help                  Display this message

Environment variables set by the user will be printed with an
asterisk at the end of the line.
Cleans the target directory of the mason direcotry

Usage:
    mason clean [options]

Options:
    -h, --help                  Display this message

Generate documentation for a mason package using chpldoc

Usage:
    mason doc [options]

Options:
    -h, --help                  Display this message

Will generate documentation when ran inside a mason package.
Requires that chpldoc is set up in order to work.
For instructions on setting up chpldoc, please view its documentation.

Integrate a Mason package with system packages found via pkg-config

Usage:
    mason system [options] [<args>...]
    mason system [options]

Options:
    pc                          Print a system package's .pc file
    search                      Search all packages available on the system
    -h, --help                  Display this message

The pc command sometimes has trouble finding a .pc file if the file is named 
something other than <package name>.pc  Use -i to ensure package exists
For more information on using system dependencies see Mason documentation
Run test files located within target/debug/test

Usage:
    mason test [options]

Options:
    -h, --help                  Display this message
        --show                  Direct output of tests to stdout
        --no-run                Compile tests without running them
        --parallel              Run tests in parallel(sequential by default)

Test configuration is up to the user
Tests pass if they exit with status code 0
Use, install and search for external packages to build Mason packages with

Usage:
    mason external [options] [<args>...]
    mason external [options]

Options:
    search                      Search for a specific external package
    compiler                    List and search for compilers on system
    install                     Install an external package
    uninstall                   Uninstall an external package
    info                        Show information about an external package
    find                        Find information about installed external packages
    -h, --help                  Display this message
        --setup                 Download and install Spack backend
        --spec                  Display Spack specification help

Please see Mason documentation for more instructions on using external packages
