  called from badcall.v:3
  called from badcall.v:3
  called from badcall.v:3
  called from badcall.v:3
  called from badcall.v:4
  called from badcall.v:4
  called from badcall.v:4
 called from 2 in __init at assign2.v:1
 called from 3 in f at assign2.v:3
 called from 3 in f at assign2.v:3
 called from 3 in f at assign2.v:3
 called from 4 in __init at assign2.v:1
 called from 5 in __init at assign2.v:1
 called from 5 in __init at assign2.v:1
 called from 5 in __init at assign2.v:1
 called from 5 in __init at assign2.v:1
 called from 75 in new at prelude.v:75
 called from 76 in operator at prelude.v:76
__init::self(assign2.v:1) ( C (assign2.v:1) )
badcall.v:2: expression has no type
badcall.v:2: expression has no type
badcall.v:2: illegal call argument type 'x' illegal: ( float64 ) 
badcall.v:2: unresolved call 'f'
badcall.v:3: expression has no type
badcall.v:3: expression has no type
badcall.v:4: expression has no type
f::c2(assign2.v:3) ( C (assign2.v:1) )
fail: fatal error, program does not type
function __init assign2.v:1
function __init assign2.v:1
function __init prelude.v:7
function f assign2.v:3
function new prelude.v:75
function operator prelude.v:76
function operator prelude.v:76
function operator prelude.v:76
function operator prelude.v:81
function print prelude.v:135
globals
new::a(prelude.v:75) ( C (assign2.v:1) )
new::o(prelude.v:75) ( C (assign2.v:1) )
operator::a(prelude.v:76) ( C (assign2.v:1) )
operator::a(prelude.v:76) ( C (assign2.v:1) )
operator::a(prelude.v:76) ( C (assign2.v:1) )
operator::a(prelude.v:81) ( int32 (prelude.v:25) )
operator::b(prelude.v:76) ( __init (prelude.v:74) )
operator::b(prelude.v:76) ( c )
operator::b(prelude.v:76) ( d )
operator::b(prelude.v:81) ( int32 (prelude.v:25) )
prelude.v:135: 'a' has no type
print::a(prelude.v:135) ( int32 (prelude.v:25) )
system::__init(prelude.v:7) ( __init (prelude.v:7) )
system::null(prelude.v:60) ( null (prelude.v:60) )
user::C(assign2.v:1) ( C (assign2.v:1) )
user::__init(assign2.v:1) ( __init (assign2.v:1) )
user::c1(assign2.v:2) ( C (assign2.v:1) )
