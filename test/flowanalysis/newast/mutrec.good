





 called from 13 in bar at mutrec.chpl:17
 called from 19 in __init at mutrec.chpl:22
 called from 20 in __init at mutrec.chpl:22
 called from 22 in __entryPoint at mutrec.chpl:22
 called from 22 in __entryPoint at mutrec.chpl:22
 called from 22 in __entryPoint at mutrec.chpl:22
 called from 4 in foo at mutrec.chpl:8
::0(mutrec.chpl:12) ( int64 (<unknown>:0) )
::0(mutrec.chpl:19) ( int64 (<unknown>:0) )
::0(mutrec.chpl:20) ( int64 (<unknown>:0) )
::0(mutrec.chpl:3) ( int64 (<unknown>:0) )
::1(mutrec.chpl:13) ( int64 (<unknown>:0) )
::1(mutrec.chpl:4) ( int64 (<unknown>:0) )
::__entryPoint(<unknown>:0) ( __entryPoint (mutrec.chpl:22) )
::__init(<unknown>:0) ( __init (<unknown>:0) )
::__init(mutrec.chpl:22) ( __init (<unknown>:0) )
::__initIntPrelude(<unknown>:0) ( __initIntPrelude (<unknown>:0) )
::__initIntPrelude(mutrec.chpl:22) ( __initIntPrelude (<unknown>:0) )
::__initPrelude(<unknown>:0) ( __initPrelude (<unknown>:0) )
::__initPrelude(mutrec.chpl:22) ( __initPrelude (<unknown>:0) )
::a(<unknown>:0) ( int64 (<unknown>:0) )
::a(<unknown>:0) ( int64 (<unknown>:0) )
::a(mutrec.chpl:12) ( int64 (<unknown>:0) )
::a(mutrec.chpl:3) ( int64 (<unknown>:0) )
::bar(<unknown>:0) ( bar (<unknown>:0) )
::bar(mutrec.chpl:20) ( bar (<unknown>:0) )
::bar(mutrec.chpl:4) ( bar (<unknown>:0) )
::done with bar(mutrec.chpl:15) ( string (<unknown>:0) )
::done with foo(mutrec.chpl:6) ( string (<unknown>:0) )
::foo(<unknown>:0) ( foo (<unknown>:0) )
::foo(mutrec.chpl:13) ( foo (<unknown>:0) )
::foo(mutrec.chpl:19) ( foo (<unknown>:0) )
::in bar(mutrec.chpl:11) ( string (<unknown>:0) )
::in foo(mutrec.chpl:2) ( string (<unknown>:0) )
::null(<unknown>:0) ( void (<unknown>:0) )
bar(0);
bar(1);
foo(0);
foo(1);
function __entryPoint mutrec.chpl:22
function __init mutrec.chpl:22
function __init() {
function __initIntPrelude mutrec.chpl:22
function __initPrelude mutrec.chpl:22
function bar mutrec.chpl:17
function bar(inout a: integer) {
function foo mutrec.chpl:8
function foo(inout a: integer) {
globals
if ((a==0)) {
if ((a==0)) {
writeln("done with bar");
writeln("done with foo");
writeln("in bar");
writeln("in foo");
}
}
}
}
}
} else {
} else {
