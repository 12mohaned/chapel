BUILDING
========

Set the enviroment variable HPCC_VERSIONS to the list of "arch" types
you want to build for.  The "arch" types are defined by files in
hpl/Make.<arch>.  For example, if you want to build all the versions
for the HPCC Challenge 2009, set HPCC_VERSIONS to:

    'CrayXT-hpcc09 CrayXT-hpcc09-openmp CrayXT-hpcc09.bucket=1 CrayXT-hpcc09-openmp.bucket=1'

This builds MPI and OpenMP versions with the default bucket size
(1024) and bucekt size equal to "1".

The binaries are place in a directory named BUILD.<timestamp>.


NEW FILES
=========

hpl/Make.*:

"arch" definitions for various machines (CrayXT, CrayCX1, etc.).
These are all very similar (some possibly even the same).

MakeAll (new):

Build for all "arch" in the environment variable HPCC_VERSIONS.  The
resulting binaries are place in a directory named BUILD.<timestamp>.


MODIFICATIONS MADE TO THE ORIGINAL hpcc-1.2.0
=============================================

src/io.c:

Make it possible to specify at runtime the benchmarks to be run.
Specify 2 additional lines in hpccinf.txt (if EOF is hit, ignore).

The 4 additional lines are as follows:

(1) ignored line (will fill with benchmark order for reference)

## PTRANS|HPL|*DGEMM|sDGEMM|*Stream|sStream|MPIRA|*RA|sRA|MPIFFT|*FFT|sFFT|LB ##

(2) an unsigned integer which is used as a bit mask to turn the
    various benchmarks on/off (based on order above).  For example,
    384==110000000 which means run StarStream and Single Stream.

(3) Log of the MPIRandomAccess problem size

(4) Log of the MPIRandomAccess number of updates


The only additional overhead added is that these settings must be
broadcast to all processors.  To avoid changing the params data
structure, I just always have it broadcast all the values.  If this
turns out to take too much time, I can changed it to be smarter (only
broadcast if necessary, broadcast a single message, etc.)


RandomAccess/RandomAccess.h:

Surround #define MAX_TOTAL_PENDING_UPDATE with an #ifndef to make it
possible to change this value via a compile-time flag.


RandomAccess/MPIRandomAccess.c:

Small change to use (3) & (4) above if defined in the input file.



