bug: memory corruption upon domains and arrays in a 'begin'

[The same bug might be covered by other futures, but I am not sure.]

Running this under valgrind for comm=none gives:

starting
in begin
dom1 {1..0}.
dom2 {1..0, 1..0}.
arr1 0 0.
arr2 0 0
0 0.
after begin
==21321== Invalid read of size 8
==21321==    at 0x4434A7: dist (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x433AF1: chpl__convertValueToRuntimeType (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x45502C: writeIt7 (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x4559DD: write7 (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x4852E7: writeln2 (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x49234E: writeln8 (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x4756A5: test (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x474CD1: chpl__init_begin_HYPHEN_dom_HYPHEN_arr_HYPHEN_mem_HYPHEN_corrupt (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x474EE5: chpl_gen_main (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x49B2AD: chpl_main (main.c:92)
==21321==    by 0x4A39BE: chpl_task_callMain (tasks-fifo.c:416)
==21321==    by 0x49B411: main (main.c:170)
==21321==  Address 0x5646450 is 48 bytes inside a block of size 96 free'd
==21321==    at 0x4C2852A: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==21321==    by 0x432BEA: chpl_here_free (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x442D19: chpl___TILDA__domain (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x4055FF: chpl__autoDestroy2 (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x47BA1C: begin_fn (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x47BC87: wrapbegin_fn (in CHPL_HOME/test/parallel/begin/vass/a.ser)
==21321==    by 0x4A52C3: thread_begin (tasks-fifo.c:1150)
==21321==    by 0x4A6899: pthread_func (threads-pthreads.c:364)
==21321==    by 0x50B17B5: start_thread (in /lib64/libpthread-2.11.3.so)
==21321==
==21321== Invalid read of size 8
... etc. ...
dom1 {7770..7771}.
.....

Seems like a reference counting issue.

"Unwrapping" the body of test(), i.e. placing its body
in the top (module) scope gets rid of the bug.

When this bug is fixed, update the test suite in
  test/parallel/taskPar/taskIntents/
as follows:
  * remove src/*.patch
  * run 'make clobber all' in src/
  * re-test and commit whichever .chpl files become different as a result
