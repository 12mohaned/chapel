from libc.stdint cimport *

cdef extern from "uintFunctions.h":
	void chpl__init_uintFunctions(int64_t _ln, int32_t _fn);
	void takesUint(uint64_t x);
	uint64_t getUint();
	uint64_t takeAndReturn(uint64_t x);

cdef extern from "chpltypes.h":
	ctypedef void* c_fn_ptr

cdef extern from "chpl-init.h":
	void chpl_library_init(int argc, char* argv[])
	void chpl_library_finalize()
from uintFunctions cimport chpl_library_init, chpl_library_finalize
from uintFunctions cimport chpl__init_uintFunctions, takesUint as chpl_takesUint, getUint as chpl_getUint, takeAndReturn as chpl_takeAndReturn

import numpy
cimport numpy

def chpl_setup():
	cdef char** args = ['uintFunctions']
	chpl_library_init(1, args)
	chpl__init_uintFunctions(1, 1)

def chpl_cleanup():
	chpl_library_finalize()

def takesUint(numpy.uint64 x):
	chpl_takesUint(x)

def getUint():
	ret = chpl_getUint()
	return ret

def takeAndReturn(numpy.uint64 x):
	ret = chpl_takeAndReturn(x)
	return ret
