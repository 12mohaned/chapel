#!/usr/bin/perl
#
# by default: run tests on release/examples directory with
#             combinations of optimization flags listed in
#             OPT_TESTING_FLAGS
#
# -cron: check out a new copy of chapel, make it, run tests as above,
#        and mail results to chapel_cronmail@cray.com ; on Saturdays
#        run tests on every directory and on Sundays, do nothing
#
# -all: run tests on almost all test/ subdirectories, not just
#       release/examples
#

if (@ARGV) {
  $flag = shift @ARGV;
  if ($flag eq "--cron" || $flag eq "-cron") {
    $cron = 1;
  } elsif ($flag eq "--all" || $flag eq "-all") {
    $all = 1;
  } else {
    die "usage: start_opt_test [--cron]\n";
  }
}

if ($cron) {
  `rm -rf /tmp/opt_testing`;
  `mkdir /tmp/opt_testing`;
  `cd /tmp/opt_testing && svn export -q https://gemelli.cs.washington.edu/repos/chapel >& /dev/null`;
  `cd /tmp/opt_testing/chapel && make all >& /dev/null`;
  $home = "/tmp/opt_testing/chapel/test";
  $ENV{'CHPL_HOME'} = "/tmp/opt_testing/chapel";
} else {
  $home = ".";
}

@OPTS = `cat $home/OPT_TESTING_FLAGS`;

if ($all) {
  $dir = "arrays associative classes dispatch domains expressions functions modules npb parallel puzzles reductions release/examples sparse spec statements studies types users";
} else {
  $dir = "release/examples";
}

`rm -f .opt_testing.tmp`;

foreach $opt (@OPTS) {
    chomp $opt;
    system("echo \"\" | tee -a $home/.opt_testing.tmp");
    system("echo \"OPTIMIZATION FLAGS: $opt\" | tee -a $home/.opt_testing.tmp");
    system("echo \"\" | tee -a $home/.opt_testing.tmp");
    system("cd $home && ../util/start_test $dir --compopts \"$opt\" | tee -a .opt_testing.tmp");
}

@lines = `cat $home/.opt_testing.tmp`;

foreach $line (@lines) {
    if ($line =~ /\[Error/) {
        $nerrort2++;
    }
}

if ($cron) {
    $nerror = $nerrort2/2;
    open(FILE, "| mail -s \"Cron $nerror/$nerror (chap02:opts tests)\" chapel_cronmail\@cray.com");
} else {
    open(FILE, ">&STDOUT");
}

$nerror = 0;
$first = 1;
foreach $line (@lines) {
    chomp $line;
    if ($line =~ /OPTIMIZATION\ FLAGS\:\ (.*)/) {
        print FILE "$1\n";
    } elsif ($line =~ /\[Test Summary/) {
        print FILE "\n";
        $show = 1;
    } elsif ($line =~ /\[END/) {
        print FILE "\n";
        $show = 0;
    } elsif ($show) {
        if ($line =~ /\[Error/) {
            $nerror++;
        }
        print FILE "$line\n";
    }
}

print FILE "Total Errors: $nerror\n";

if ($cron) {
    close(FILE);
}
