#! /bin/bash -norc
#
# This just creates an appropriate .good.
#
target=$($CHPL_HOME/util/chplenv/chpl_platform.py --target)
locModel=$($CHPL_HOME/util/chplenv/chpl_locale_model.py)
tasks=$($CHPL_HOME/util/chplenv/chpl_tasks.py)

case $target in
  linux*|cray-xc|cray-xe)
    numPUs=$( grep -c '^processor[[:space:]]\+: ' /proc/cpuinfo )
    numCores1=$( grep -m 1 '^cpu cores[[:space:]]\+: ' /proc/cpuinfo |
                 sed 's/^[^0-9]*\([0-9]\+\).*$/\1/' )
    numSibs1=$( grep -m 1 '^siblings[[:space:]]\+: ' /proc/cpuinfo |
                sed 's/^[^0-9]*\([0-9]\+\).*$/\1/' )
    sibsPerCore=$(( $numSibs1 / $numCores1 ))
    numCores=$(( $numPUs / $sibsPerCore ))
    case $locModel-$tasks in
      *-fifo|*-massivethreads|flat-qthreads)
        echo $numCores > $1.good;;
      numa-qthreads)
        echo $numCores > $1.good
        for (( i=0 ; $i < $numCores ; i++ )) ; do
          echo $sibsPerCore >> $1.good
        done;;
      *)
        echo Unexpected configuration $target-$locModel-$tasks > $1.good;;
    esac;;

  darwin)
    echo $( sysctl -n hw.physicalcpu ) > $1.good;;

  *)
    echo Unexpected target $target > $1.good;;
esac
