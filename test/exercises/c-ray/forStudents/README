Data Parallel Hands-on exercise: C-ray ray tracing
==================================================

This directory contains the framework for writing a ray-tracing
program in Chapel.  All of the ray tracing complexity that converts a
pixel coordinate into a color value is provided to you; all you have
to do is create an array representing the image and compute its pixel
values.

To get started with the project, browse, compile, and run 'c-ray.chpl'
which is the Chapel source file for the ray tracer.  Running the
program without changes should produce a black rectangular image named
'image.bmp' which you should be able to view in any standard image
viewer.  You can also create PPM files by supplying an image filename
with the '.ppm' extension.  Running the program with --usage will
print out its help message describing this option and others.

Once you're ready to start ray tracing, jump to the main() procedure
where the comments will guide you through STEP 0, STEP 1, STEP 2, etc.

Important files in this directory are as follows:

c-ray.chpl   : The main Chapel ray-tracing source file
Image.chpl   : A helper module for creating image files
Makefile     : A trivial Makefile showing how to compile the program
scene        : A simple scene file describing four spheres
sphfract     : A more complex scene file describing a fractal pattern
scene.bmp    : The expected BMP file for 'scene'
scene.ppm    : The expected PPM file for 'scene'
sphfract.bmp : The expected BMP file for 'sphfract'
sphfract.ppm : The expected PPM file for 'sphfract'
README       : This file

Files related to the Chapel testing system which we use to maintain
this code (and which can be ignored) are as follows:

CATFILES
CLEANFILES
c-ray.execopts
c-ray.good
Image.notest
