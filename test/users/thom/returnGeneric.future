semantic: able to return generic classes?

This future asks the question whether or not it should be legal to
return an uninstantiated generic class.  

Arguments for: we permit a similar thing to be done for formal
arguments and it's convenient.  

Arguments against: in the presence of multiple returns, it may be
difficult/impossible to determine the type of the generic (though
perhaps we could only report an error in that case?)


Discussion at (07/03/08) meeting:

Steve pointed out that we've chosen to interpret return type
specifications less as constraints on the return type and more as a
cast type (or type of temp variable capture) of the thing being
returned, and that for this reason, generic classes don't make a lot
of sense.  Of course, completely inferred return types don't meet this
requirement, so this could be viewed more as a partially inferred
return type rather than a completely inferred one.

Steve pointed out that supporting this would be equivalent to
supporting:

        var myC: C = new C(int);

and that we should support both or neither.

There was also an open question about what it would mean to have
"return new D(int)" where D is a subclass of C.

We decided to not support this for now, though there was some
agreement that this could be a convenient feature if time allowed down
the road, and if we could resolve semantic questions like the one
immediately preceding.
