;
complex;
function +( x: complex;
 y: complex): ??? {

return complex((x.re+y.re), (x.im+y.im));
}


function -( x: complex;
 y: complex): ??? {

return complex((x.re-y.re), (x.im-y.im));
}


function *( x: complex;
 y: complex): ??? {

return complex(((x.re*y.re)-(x.im*y.im)), ((x.im*y.re)+(x.re*y.im)));
}


function /( x: complex;
 y: complex): ??? {

return Let Expr;
}


function +( x: complex;
 y: float): ??? {

return complex((x.re+y), x.im);
}


function +( x: float;
 y: complex): ??? {

return complex((x+y.re), y.im);
}


function -( x: complex;
 y: float): ??? {

return complex((x.re-y), x.im);
}


function -( x: float;
 y: complex): ??? {

return complex((x-y.re), (-y.im));
}


function *( x: complex;
 y: float): ??? {

return complex((x.re*y), (x.im*y));
}


function *( x: float;
 y: complex): ??? {

return complex((x*y.re), (x*y.im));
}


function /( x: complex;
 y: float): ??? {

return complex((x.re/y), (x.im/y));
}


function /( x: float;
 y: complex): ??? {

return Let Expr;
}


var n: integer = 999;
var D: domain(1) = [1..n];
var A: [D] float;
forall var i: integer; in D {
A(i) = i;
}
