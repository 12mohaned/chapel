An empty associative domain: {}

A populated associative domain of strings: {Dana, Alice, Frank, Clark, Bob, Ellen}

Removed 'Bob', added 'Robert': {Dana, Alice, Frank, Clark, Robert, Ellen}

Our first associative array: 0 0 0 0 0 0
Our first array, pretty-printed: { Alice => 0, Clark => 0, Dana => 0, Ellen => 0, Frank => 0, Robert => 0 }

Our Scores array after adding 'Gary': { Alice => 0, Clark => 0, Dana => 0, Ellen => 0, Frank => 0, Gary => 10, Robert => 0 }

Integers from 1..n composed of odds | evens: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
Odd integers below n/2: odds & ltHalf = 1 3 5 7 9
Another way to get the same result: ltHalf - evens = 1 3 5 7 9
Even below n/2, odd above: ltHalf ^ odds = 2 4 6 8 10 11 13 15 17 19

Some simple associative arrays:
A = { a => true, b => false, c => true }
B = { b => true, c => false, d => true }
C is the union of A and B; C = A | B : { a => true, b => true, c => false, d => true }
A becomes the union of A and B; A |= B: { a => true, b => true, c => false, d => true }
