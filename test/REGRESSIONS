# USAGE: the intent of this file is to keep track of current
# regressions and to keep notes about why they are failing.  Since
# linux is our main platform, linux regressions are listed first, and
# will typically apply to all other platforms as well.  Variations on
# linux (linux with valgrind and linux64) are listed next.  Other
# platforms follow, listed alphabetically.  Regressions that are not
# found on linux should be listed under the platforms in question.
# Formatting for each entry can be loose, but should roughly follow
# the format of test name(s), followed by a description of why that
# test is failing, followed by an indication of whose court the
# regression is in.



=============================
linux and general regressions
=============================

[Error matching compiler output for arrays/deitz/test_array_basic1]
[Error matching compiler output for arrays/deitz/test_array_of_record1]

  Fail because the new wrapper constructor for the class is not called
  when the array is initialized.  The array needs a constructor so
  that its initialization code can be analyzed.

[Error matching compiler output for domains/bradc/writeIndex]
[Error matching compiler output for domains/bradc/writeIndex2]

  There is something very wrong with IndexTypes.  They should not
  need their own write function (bradc).

[Error matching compiler output for types/type_variables/deitz/test_datablock3]

  ???

[Error matching program output for trivial/roxana/test_param_decl3]

  Parameters need to be initialized in certain contexts (e.g., global
  variables), we should check for this context in checkSemantics (the
  old check is commented out).  Or, we could make class/function
  instantiation set up a new initializer for the parameter after its
  been instantiated so that the test would pass for all parameters.
  (deitz/bradc)

==========================
linux valgrind regressions
==========================



============================
linux64-specific regressions
============================



===========================
cygwin-specific regressions
===========================



============================
freebsd-specific regressions
============================



==========================
sunos-specific regressions
==========================
