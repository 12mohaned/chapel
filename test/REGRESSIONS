# USAGE: the intent of this file is to keep track of current
# regressions and to keep notes about why they are failing.  Since
# linux is our main platform, linux regressions are listed first, and
# will typically apply to all other platforms as well.  Variations on
# linux (linux with valgrind and linux64) are listed next.  Other
# platforms follow, listed alphabetically.  Regressions that are not
# found on linux should be listed under the platforms in question.
# Formatting for each entry can be loose, but should roughly follow
# the format of test name(s), followed by a description of why that
# test is failing, followed by an indication of whose court the
# regression is in.



=============================
linux and general regressions
=============================

[Error matching compiler output for arrays/deitz/test_array_basic1]
[Error matching compiler output for arrays/deitz/test_array_of_record1]

  Fail because the new wrapper constructor for the class is not called
  when the array is initialized.  The array needs a constructor so
  that its initialization code can be analyzed.

[Error matching compiler output for domains/bradc/writeIndex]
[Error matching compiler output for domains/bradc/writeIndex2]

  There is something very wrong with IndexTypes.  They should not
  need their own write function.


==========================
linux valgrind regressions
==========================



============================
linux64-specific regressions
============================

types/type_variables/deitz/test_clone_class3:
types/type_variables/deitz/test_clone_class4:

This is because on the 32-bit platform string is 32 bits and 
on a 64-bit platform string is 64 bits (a pointer). 

The problem actually stems from our lack of support for Sum types 
since on the 32-bit platform the getter (y) is cloned for the
different offset of "y" caused by the different size of "x" for
the two classes (foo and foo_clone_2) while on the 64-bit platform 
the getter is not cloned since the offsets are the same and
the "this" variable has a sum type "foo | foo_clone_2" which
is currently not supported. 


memory/shannon/memstatPrint:
memory/shannon/printFinalMemStat:

  I fixed these regressions on the Sun and valgrind linux runs, but I'm 
  not sure why it's still failing here.  I'll take a look.  (shannon)


memory/shannon/printMemTable

  need to implement a way to filter memtable when printing to filter
  out small allocations that are platform-dependent (like structs with
  pointer values).



===========================
cygwin-specific regressions
===========================



============================
freebsd-specific regressions
============================



==========================
sunos-specific regressions
==========================
