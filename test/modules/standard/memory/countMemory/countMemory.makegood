#!/usr/bin/env perl

$memoryInKBytes = @ARGV[0];
$memoryInBytes = $memoryInKBytes * 1024;
$memoryInMBytes = int($memoryInKBytes / 1024);
$memoryInGBytes = int($memoryInMBytes / 1024);

print "memory is: $memoryInBytes\n";
print " in bytes: $memoryInBytes\n";
print "    in kb: $memoryInKBytes\n";
print "    in mb: $memoryInMBytes\n";
print "    in gb: $memoryInGBytes\n";

print "memory is: $memoryInBytes\n";
print " in bytes: $memoryInBytes\n";
print "    in kb: $memoryInKBytes\n";
print "    in mb: $memoryInMBytes\n";
print "    in gb: $memoryInGBytes\n";

print "memory is: $memoryInBytes\n";
print " in bytes: $memoryInBytes\n";
print "    in kb: $memoryInKBytes\n";
print "    in mb: $memoryInMBytes\n";
print "    in gb: $memoryInGBytes\n";

$realMemInKBytes = sprintf("%g", $memoryInKBytes);
$realMemInBytes = sprintf("%g", $realMemInKBytes * 1024);
$realMemInMBytes = sprintf("%g", $realMemInKBytes / 1024);
$realMemInGBytes = sprintf("%g", $realMemInMBytes / 1024);

#
# if a string is all digits, add a trailing .0 to match
# Chapel's default formatting of reals
#
if ($realMemInKBytes =~ m/^\d+$/) {
    $realMemInKBytes .= ".0";
}
if ($realMemInBytes =~ m/^\d+$/) {
    $realMemInBytes .= ".0";
}
if ($realMemInMBytes =~ m/^\d+$/) {
    $realMemInMBytes .= ".0";
}
if ($realMemInGBytes =~ m/^\d+$/) {
    $realMemInGBytes .= ".0";
}


printf "memory is: %s\n", $realMemInBytes;
printf " in bytes: %s\n", $realMemInBytes;
printf "    in kb: %s\n", $realMemInKBytes;
printf "    in mb: %s\n", $realMemInMBytes;
printf "    in gb: %s\n", $realMemInGBytes;

