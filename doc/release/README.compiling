===================================
Compiling Using the Chapel Compiler
===================================

If you have set up your environment as described in the top-level
README file and built the compiler as described in README.building,
you should be able to see the Chapel compiler's help message using:

     chpl --help

This displays the compiler's command-line flags sorted by category.
For each flag, the short one-letter form is given (if available)
followed by the long form of the flag.  Next, the pattern for any
arguments to the flag are given.  And finally a brief description of
the flag is provided.

More detailed information about the compiler is also available on its
man page, which is available via:

     man chpl


-----------------
Most Useful Flags
-----------------

We note some of the most useful flags here:

     -o <filename> : specify the filename of the generated executable,
                     otherwise ./a.out is used by default

     -s <name>[=<value>] : set the value of a config param

     --no-bounds-checks : turns off runtime bounds checks

     -O : turns on optimization of the generated C code

     --savec <dir> : saves the generated C code in the specified
                     directory

     -g : support debugging of the generated C code

     --ccflags <flags> : specify flags that should be used with the
                         back-end C compiler

     --print-passes : print the compiler passes as they execute

     --print-commands : print the system commands that the compiler
                        executes

     --print-code-size : prints some code size statistics about the
                         number of lexical tokens per line, as well as
                         the number of code, comment, and blank lines

     --version : print the Chapel compiler version number
