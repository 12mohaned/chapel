- support applications with more than required arguments as multiple-calls
  (add_application_constraints)

- handle structural types.  Generalize tuple handling to include ref etc. in
  patterns.

- prototype Chapel grammar

- constant folding (now required earlier to do generics)
  + remove dead (folded) code 

- inlining

- handle david's generics stuff

- trailing context for regex to handle 1..n

- AST rewrite to change '=' to '==' in expressions and to
  make sure no other assignments are in expressions.

