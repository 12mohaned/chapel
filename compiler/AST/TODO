* move suspicious symbols into prelude file
* unify char literals between chapel.y and chapel.lex (name or not)
* deal with BLC comments

* Need to insert iterator indices into own scope (e.g., [i:D] i) rather
  than parent's
* Check for redefinition of symbol within same scope

* support for classes/methods

* understand what can be used before defined better and handle more cleanly

* remove dead code (usually commented out)

* refactor function implementation stuff into a helper function?
  (from parser and createAST.cpp)

* squelch init prototype
  - and/or specialize name of init procedure to file and make a top-level
    init file

* improve type_info() for DomainExpr

* improve variable initialization for domains -- generalize for
  nontrivial initializations, and remove some of the typeid stuff
  by factoring into class hierarchy?

* remove hack that assumes domains of unknown rank are 1 (stmt.cpp
  and type.cpp)

* remove reduce/reduce and scan/reduce conflicts

* should do export control of variables, types, all symbols

* organize and lump files better -- into a static class, e.g.

* fix VarDefStmt::codegen() so that it asks the type whether it
  needs to be initialized and then asks the type to generate
  the arguments to the initialize method.


SHANNON:
* fix type_info() for BinOp
* implement isComputable() and intVal() better for Expr hierarchy
* operator precedence
* add read routines for enumerated types?

