* take all instances of NULL out
* move suspicious symbols into prelude file
* fix precedence problems (and there are lots)
* check necessity of print*() variants
* move char literals from chapel.y to chapel.lex
* deal with BLC comments

* Need to insert iterator indices into own scope (e.g., [i:D] i) rather
  than parent's
* Check for redefinition of symbol within same scope

* support for classes/methods

* subdomain/subindex expressions are wrong (idents rather than expressions)

* understand what can be used before defined better and handle more cleanly

* remove dead code (usually commented out)

* refactor function implementation stuff into a helper function?
  (from parser and createAST.cpp)

* squelch init prototype
  - and/or specialize name of init procedure to file and make a top-level
    init file

* improve type_info() for DomainExpr

* improve variable initialization for domains -- generalize for
  nontrivial initializations, and remove some of the typeid stuff
  by factoring into class hierarchy?

* remove hack that assumes domains of unknown rank are 1 (stmt.cpp
  and type.cpp)

Shannon:
* implement codegen for Conditional
* fix type_info() for BinOp
* implement isComputable() and intVal() better for Expr hierarchy
