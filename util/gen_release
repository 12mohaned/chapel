#!/usr/bin/perl


# check out a clean copy of the sources into a temporary directory
if ($basetmpdir eq "") {
    $basetmpdir = $ENV{'TMPDIR'};
}
if ($basetmpdir eq "") {
    $basetmpdir = "/tmp";
}
$uwusername = $ENV{'CHPL_UW_CVS_USERNAME'};
if ($uwusername eq "") {
    $uwusername = $user;
}
$tmpdir = "$basetmpdir/chapel-release.$user.$pid.deleteme";
$chapeldir = "$tmpdir/chapel";
$cvsroot = ":pserver:$uwusername\@gemelli.cs.washington.edu:2403/gemelli3/chapelroot";
system("mkdir $tmpdir > /dev/null");
system("cd $tmpdir && cvs -d $cvsroot checkout nightly");


#$ignores = "CVS|Bin|Logs|Samples|Share|OUTPUT|RCS";
$cvsignores = "CVS|RCS";

# explicit files to include
@files = (
       "BUILD_VERSION",
       "COPYRIGHT", 
       "DIRS",
       "LICENSE",
       "Makefile",
#       "doc",             # currently empty dir for release
#       "example",         # currently empty dir for release
       "util/platform"
);

# C/C++ sources
@code_dirs = (
    "compiler"
);

# include these dirs and their entire contents
@complete_dirs = (
    "etc",
    "make",
    "modules",
    "runtime"
);


chdir "$tmpdir";

foreach $file (@files) {
    # print "$file\n";
    $dfile = "chapel/$file";
    if (!(-e $dfile)) {
        print "$dfile does not exist\n";
        exit( 9);
    }
    push @tarfiles, $dfile;
}

foreach $dir (@code_dirs) {
    @filelist = `find chapel/$dir`;
    foreach $fullpath (@filelist) {
        chomp $fullpath;
        $file = $fullpath;
        $file =~ s/(\S+\/)+//g;
        # print "$file\n";
        # print "$fullpath\n";
        if ($file =~ /(\.(h|cpp|c|y|lex)$)|Makefile|README|DIRS|FILES/) {
            # print "$fullpath\n";
            push @tarfiles, $fullpath;
        }
    }
}

foreach $dir (@complete_dirs) {
    @filelist = `find chapel/$dir`;
    foreach $fullpath (@filelist) {
        chomp $fullpath;
        next if ((-d $fullpath) || ($fullpath =~ /$cvsignores/));
        # print "$fullpath\n";
        push @tarfiles, $fullpath;
    }
}


# verify only files are listed
foreach $file (@tarfiles) {
    if (-d $file) {
        print "error: directory '$file' included\n";
    }
}

if (defined($ENV{"CHPLHOME"})) {
    $resultdir = $ENV{"CHPLHOME"};
} else {
    $resultdir = $basetmpdir;
}

$cmd = "tar -cz -f $resultdir/chapel.tar.gz @tarfiles";
#print "$cmd\n";
system ($cmd);

print "Left result in $resultdir/chapel.tar.gz\n";

system("rm -r $tmpdir");
