LAUNCHER_COMM_SRCS = \
        chpl_cfg_comm_locales.c \

COMM_SRCS = \
	$(LAUNCHER_COMM_SRCS) \
	chpl_cfg_comm.c \

SVN_SRCS = $(COMM_SRCS)
SRCS = $(SVN_SRCS)

COMM_OBJS = \
	$(COMM_SRCS:%.c=$(COMM_OBJDIR)/%.o)

include $(GASNET_INSTALL_DIR)/include/$(CHPL_GASNET_CONDUIT)-conduit/$(CHPL_GASNET_CONDUIT)-par.mak

# 
# The following lines try to combine GASNet's favorite C compiler
# flags with ours.  Unfortunately, we have to override several of our
# own favorites as follows:
#
# -Wno-missing-prototypes must be used because
# gasneti_linkconfig_idiotcheck isn't prototyped before it's used (boo)
# and is static, so we can't prototype it for them (awwww).
#
# -Wno-strict-prototypes has to be used because most GASNet prototypes
# aren't strict.
#
# -std=c99 doesn't work because setenv() is no longer supported by C99,
# and it's currently our best way of conveyinng to GASNet to use gdb when
# it launches the child tasks.  We use -std=gnu89 instead because with
# our compilers it's what you'd get if you weren't specifying a standard
# at all -- this is set using SUPPORT_SETENV_CFLAGS so as not to encode
# gcc-specific flags into this Makefile
#
# -O0 needs to be used because GASNet generates an error if client code
# compiled -O3 is linked to GASNet compiled with debugging enabled
#
RUNTIME_CFLAGS += $(GASNET_CFLAGS) -I$(GASNET_INSTALL_DIR)/include -I$(GASNET_INSTALL_DIR)/include/$(CHPL_GASNET_CONDUIT)-conduit $(SUPPORT_SETENV_CFLAGS) -O0

ifdef CHPL_DEVELOPER
RUNTIME_CFLAGS += -Wno-strict-prototypes -Wno-missing-prototypes
endif
